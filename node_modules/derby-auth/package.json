{
  "name": "derby-auth",
  "description": "Provides authentication for DerbyJS projects",
  "version": "0.0.29",
  "main": "./index.js",
  "homepage": "https://github.com/lefnire/derby-auth/",
  "repository": {
    "type": "git",
    "url": "git://github.com/lefnire/derby-auth.git"
  },
  "author": {
    "name": "Tyler Renelle",
    "email": "tylerrenelle@gmail.com",
    "url": "https://github.com/lefnire/"
  },
  "keywords": [
    "auth",
    "oauth",
    "password",
    "facebook",
    "twitter",
    "authorization",
    "authentication",
    "derby"
  ],
  "directories": {
    "lib": "lib"
  },
  "dependencies": {
    "passport": "*",
    "passport-local": "*",
    "connect-flash": "*",
    "lodash": "*",
    "guid": "*",
    "nodemailer": "*",
    "validator": "*",
    "express": "*"
  },
  "scripts": {
    "start": "node example/server.js"
  },
  "readme": "# Derby.js Authentication\n\nProvides authentication middleware (using [Passport](http://passportjs.org/)) for use in your Derby projects.\n\n###Step 1\nSetup derby-auth strategies and configurations\n```javascript\nvar\n    auth = require('derby-auth'),\n\n    // Pass in actual Passport Strategy objects as well as their configurations (see http://passportjs.org/guide/facebook/)\n    // Note: this means you'd need \"passport-facebook\" in your package.json file\n    strategies = {\n      facebook: {\n        strategy: require('passport-facebook').Strategy,\n        conf: { clientID: process.env.FACEBOOK_KEY, clientSecret: process.env.FACEBOOK_SECRET }\n    },\n\n    // Pass in options. Domain defaults to localhost:3000, but consider it required\n    // (It's a Passport technicality, if anyone has suggestions for determining domain on run-time, please message me)\n    options = {\n        domain: (process.env.NODE_ENV==='production' ? \"http://my.com\" : \"http://localhost:3000\" )\n    }\n```\n\n###Step 2\nInitialize the Store (queries, accessControl, etc)\n```javascript\n// initialize queries and accessControl\nauth.store(store);\n```\n\n###Step 3\nUse derby-auth's mounted middleware\n```javascript\n.use(store.modelMiddleware())\n// derby-auth.middleware is inserted after modelMiddleware and before the app router to pass server accessible data to a model\n.use(auth.middleware(strategies, options))\n.use(app.router())\n```\n\nAlso, *make sure* your express app is using sessions:\n```javascript\n# Uncomment and supply secret to add Derby session handling\n# Derby session middleware creates req.session and socket.io sessions\n.use(express.cookieParser())\n.use(store.sessionMiddleware\n  secret: process.env.SESSION_SECRET || 'YOUR SECRET HERE'\n  cookie: {maxAge: ONE_YEAR}\n)\n```\n\nAnd finaly, we need to add form data parsing support:\n```javascript\n// Uncomment to add form data parsing support\n.use(express.bodyParser())\n```\n\n###Step 4 (optional, recommended)\nIf you want drop-in Login and Register forms, including form validation, use the `<derby-auth:login />` and `<derby-auth:register />` [components](http://derbyjs.com/#component_libraries). To enable these, you'll need this in your `/lib/app/index.js` file:\n```javascript\n   derby.use(require('derby-auth/components'));\n```\n\nSee the [example](https://github.com/lefnire/derby-auth/tree/master/example) for more details, as well as login / registration forms, sign-in buttons, etc.\n\n## Roadmap\nSee my [Workflowy](https://workflowy.com/shared/2a5229b2-64b1-8f5c-e649-4b61c0a1e32a/)\n\n## Why not EveryAuth?\nThis project was originally implemented with Everyauth ([see branch](https://github.com/lefnire/derby-auth/tree/everyauth)), but had some issues:\n  1. Every provider had to be implemented individually in code. Passport has an abstraction layer, which is what allows us to pass in Strategy + conf objects in server/index.js for every provider we want enabled.\n  2. Password authentication posed technical difficulties. See the [Google Group discussion](https://groups.google.com/forum/?fromgroups=#!topic/derbyjs/JuUqUNd9Rls)",
  "readmeFilename": "README.md",
  "_id": "derby-auth@0.0.29",
  "dist": {
    "shasum": "ec6c38a3c6a3f2da1c18a69b08f5803eb80e96ec"
  },
  "_resolved": "git://github.com/lefnire/derby-auth.git#e8d63090bab3253b6cd4ab83a20ea5a3cef8913f",
  "_from": "derby-auth@git://github.com/lefnire/derby-auth.git#master"
}
